DROP SCHEMA IF EXISTS public CASCADE;
CREATE SCHEMA public;

CREATE EXTENSION IF NOT EXISTS pgroonga;

CREATE TYPE user_provider_enum AS ENUM ('LOCAL', 'GOOGLE', 'GITHUB');
CREATE TYPE user_role_enum AS ENUM ('MEMBER', 'ADMIN', 'BOT');
CREATE TABLE public.users
(
    id            bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email         varchar(255)       NOT NULL UNIQUE,
    username      varchar(12)        NOT NULL UNIQUE,
    nickname      varchar(12)        NOT NULL,
    readme        text               NOT NULL DEFAULT '',
    email_visible boolean            NOT NULL DEFAULT FALSE,
    star_visible  boolean            NOT NULL DEFAULT TRUE,
    provider      user_provider_enum NOT NULL,
    role          user_role_enum     NOT NULL,
    created_at    timestamp(6)       NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at    timestamp(6)       NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE public.topics
(
    id          bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    slug        varchar(50)  NOT NULL UNIQUE,
    name        varchar(50)  NOT NULL UNIQUE,
    description varchar(255) NOT NULL DEFAULT '',
    created_at  timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at  timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE public.articles
(
    id              bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    slug            varchar(50)  NOT NULL,
    title           text         NOT NULL,
    content         text         NOT NULL,
    thumbnail       varchar(255) NOT NULL DEFAULT 'default/thumbnail.webp',
    star_count      integer      NOT NULL DEFAULT 0,
    comment_count   integer      NOT NULL DEFAULT 0,
    trending_score  integer      NOT NULL DEFAULT 0,
    created_at      timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at      timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    writer_id       bigint       NOT NULL
        CONSTRAINT articles_writer_id_fk REFERENCES public.users ON DELETE CASCADE,
    writer_username varchar(12)  NOT NULL,            -- for search(denormalization)
    topics_flat     text         NOT NULL DEFAULT '', -- for search(denormalization)
    CONSTRAINT articles_composite_key_idx UNIQUE (writer_username, slug)
);
ALTER TABLE public.articles
    ADD COLUMN fulltext TEXT GENERATED ALWAYS AS ( title || ' ' || content || ' ' || writer_username || ' ' || topics_flat ) STORED;
CREATE INDEX articles_search_idx ON public.articles USING pgroonga (fulltext pgroonga_text_full_text_search_ops_v2) WITH (tokenizer='TokenMecab')
;

CREATE TABLE public.article_topics
(
    id         bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    article_id bigint NOT NULL
        CONSTRAINT article_topics_article_id_fk REFERENCES public.articles ON DELETE CASCADE,
    topic_id   bigint NOT NULL
        CONSTRAINT article_topics_topic_id_fk REFERENCES public.topics ON DELETE CASCADE,
    UNIQUE (article_id, topic_id)
);

CREATE TABLE search_synonyms
(
    term     TEXT PRIMARY KEY,
    synonyms TEXT[]
);
