spring:
  application:
    name: ${APP_NAME}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - read:user
              - user:email
  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      chat:
        options:
          model: gpt-4.1-nano
          temperature: 0.7
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
jwt:
  issuer: ${APP_NAME}
  secret: ${ACCESS_TOKEN_SECRET}
  expiration: 600  # 10 minutes
refresh-token:
  domain: ${CLIENT_DOMAIN}
resend:
  api-key: ${RESEND_API_KEY}
  from: ${RESEND_FROM_EMAIL}
client:
  host: ${CLIENT_HOST}
server:
  port: ${SERVER_PORT:8080}
  forward-headers-strategy: framework
task-api:
  host: ${TASK_API_HOST}
  interval-token: ${TASK_API_INTERVAL_TOKEN}
discord-webhook:
  url: ${DISCORD_WEBHOOK_URL}
management:
  server:
    port: ${MANAGEMENT_PORT:8081}
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
  metrics:
    tags:
      application: ${APP_NAME}
